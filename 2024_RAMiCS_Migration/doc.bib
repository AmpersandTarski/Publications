%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Sebastiaan Joosten at 2024-06-06 13:35:14 -0500 


%% Saved with string encoding Unicode (UTF-8) 



@article{Theodorou2017,
	abstract = {The complexity of Business Intelligence activities has driven the proposal of several approaches for the effective modeling of Extract-Transform-Load (ETL) processes, based on the conceptual abstraction of their operations. Apart from fostering automation and maintainability, such modeling also provides the building blocks to identify and represent frequently recurring patterns. Despite some existing work on classifying ETL components and functionality archetypes, the issue of systematically mining such patterns and their connection to quality attributes such as performance has not yet been addressed. In this work, we propose a methodology for the identification of ETL structural patterns. We logically model the ETL workflows using labeled graphs and employ graph algorithms to identify candidate patterns and to recognize them on different workflows. We showcase our approach through a use case that is applied on implemented ETL processes from the TPC-DI specification and we present mined ETL patterns. Decomposing ETL processes to identified patterns, our approach provides a stepping stone for the automatic translation of ETL logical models to their conceptual representation and to generate fine-grained cost models at the granularity level of patterns.},
	author = {Vasileios Theodorou and Alberto Abell{\'o} and Maik Thiele and Wolfgang Lehner},
	date-modified = {2024-06-06 13:30:19 -0500},
	doi = {10.1016/j.datak.2017.08.004},
	issn = {0169-023X},
	journal = {Data \& Knowledge Engineering},
	keywords = {ETL, Patterns, Empirical, Graph matching},
	pages = {1-16},
	title = {Frequent patterns in {ETL} workflows: An empirical approach},
	volume = {112},
	year = {2017},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0169023X16302713},
	bdsk-url-2 = {https://doi.org/10.1016/j.datak.2017.08.004}}

@article{Hillenbrand2022,
	author = {Hillenbrand, Andrea and St{\"o}rl, Uta and Nabiyev, Shamil and Klettke, Meike},
	date-modified = {2024-06-06 13:29:31 -0500},
	journal = {Distributed and Parallel Databases},
	number = {1},
	pages = {5--25},
	title = {Self-adapting data migration in the context of schema evolution in {NoSQL} databases},
	volume = {40},
	year = {2022}}

@techreport{HumanitecDevOps2023,
	address = {Berlin, New York},
	author = {Humanitec},
	institution = {Humanitec Inc.},
	title = {DevOps Benchmarking Study 2023},
	year = 2023}

@book{BassWeberZhu15,
	abstract = {DevOps promises to accelerate the release of new software features and improve monitoring of systems in production, but its crucial implications for software architects and architecture are often ignored. In this book, three leading architects address these issues head-on. The authors review decisions software architects must make in order to achieve DevOps' goals and clarify how other DevOps participants are likely to impact the architect's work. They also provide the organizational, technical, and operational context needed to deploy DevOps more efficiently, and review DevOps' impact on each development phase. The authors address cross-cutting concerns that link multiple functions, offering practical insights into compliance, performance, reliability, repeatability, and security. This guide demonstrates the authors' ideas in action with three real-world case studies: datacenter replication for business continuity, management of a continuous deployment pipeline, and migration to a microservice architecture.},
	added-at = {2016-12-20T11:11:07.000+0100},
	address = {New York},
	author = {Bass, Len and Weber, Ingo and Zhu, Liming},
	biburl = {https://www.bibsonomy.org/bibtex/2c911324c924fa06668a36af58078e147/flint63},
	date-modified = {2024-06-06 13:33:37 -0500},
	doi = {10.5555/2810087},
	file = {eBook:2015/BassWeberZhu15.pdf:PDF;InformIT Product page:http\://www.informit.com/title/0134049845:URL;Amazon Search inside:http\://www.amazon.de/gp/reader/0134049845/:URL},
	groups = {public},
	interhash = {710551ed5331fc000f4b19f1a1e5b535},
	intrahash = {c911324c924fa06668a36af58078e147},
	isbn = {978-0-13-404984-7},
	keywords = {01841 103 safari book agile software development architecture admin},
	publisher = {Addison-Wesley},
	series = {SEI Series in Software Engineering},
	timestamp = {2018-04-16T11:35:02.000+0200},
	title = {DevOps: A Software Architect's Perspective},
	username = {flint63},
	year = 2015,
	bdsk-url-1 = {http://my.safaribooksonline.com/9780134049847}}

@article{Azeroual2021,
	abstract = {Data migration is required to run data-intensive applications. Legacy data storage systems are not capable of accommodating the changing nature of data. In many companies, data migration projects fail because their importance and complexity are not taken seriously enough. Data migration strategies include storage migration, database migration, application migration, and business process migration. Regardless of which migration strategy a company chooses, there should always be a stronger focus on data cleansing. On the one hand, complete, correct, and clean data not only reduce the cost, complexity, and risk of the changeover, it also means a good basis for quick and strategic company decisions and is therefore an essential basis for today's dynamic business processes. Data quality is an important issue for companies looking for data migration these days and should not be overlooked. In order to determine the relationship between data quality and data migration, an empirical study with 25 large German and Swiss companies was carried out to find out the importance of data quality in companies for data migration. In this paper, we present our findings regarding how data quality plays an important role in a data migration plans and must not be ignored. Without acceptable data quality, data migration is impossible.},
	article-number = {24},
	author = {Azeroual, Otmane and Jha, Meena},
	doi = {10.3390/bdcc5020024},
	issn = {2504-2289},
	journal = {Big Data and Cognitive Computing},
	number = {2},
	title = {Without Data Quality, There Is No Data Migration},
	url = {https://www.mdpi.com/2504-2289/5/2/24},
	volume = {5},
	year = {2021},
	bdsk-url-1 = {https://www.mdpi.com/2504-2289/5/2/24},
	bdsk-url-2 = {https://doi.org/10.3390/bdcc5020024}}

@article{Hofstedt2010,
	abstract = {Constraint programming (CP) is a young but rapidly developing technology that supports the modeling and solution of a wide range of planning, scheduling, search, and optimization problems. The integration of CP concepts into languages from other paradigms yields constraint-based multiparadigm programming. This article briefly introduces the constraint-based paradigm and discusses methods, problems, gains, and experiences in integrating CP techniques into the object-oriented paradigm, using Java as an example.},
	address = {Los Alamitos, CA, USA},
	author = {P. Hofstedt},
	doi = {10.1109/MS.2010.89},
	issn = {1937-4194},
	journal = {IEEE Software},
	keywords = {multiparadigm programming;programming languages;object-oriented languages;constraints;software engineering},
	month = {sep},
	number = {05},
	pages = {53-56},
	publisher = {IEEE Computer Society},
	title = {Constraint-Based Object-Oriented Programming},
	volume = {27},
	year = {2010},
	bdsk-url-1 = {https://doi.org/10.1109/MS.2010.89}}

@book{Isabelle,
	author = {Nipkow, Tobias and Paulson, Lawrence C and Wenzel, Markus},
	publisher = {Springer Science \& Business Media},
	title = {Isabelle/HOL: a proof assistant for higher-order logic},
	volume = {2283},
	year = {2002}}

@inproceedings{Ataei2021,
	abstract = {Many problems require working with data that varies in its structure and content. Current approaches, such as schema evolution or data integration tools, are highly tailored to specific kinds of variation in databases. While these approaches work well in their roles, they do not address all kinds of variation and do address the interaction of different kinds of variation in databases. In this paper, we define a framework for capturing variation as a generic and orthogonal con- cern in relational databases. We define variational schemas, variational databases, and variational queries for capturing variation in the structure, content, and information needs of relational databases, respectively. We define a type system that ensures variational queries are consistent with respect to a variational schema. Finally, we design and implement a variational database management system as an abstraction layer over a traditional relational database management system. Using previously developed use cases, we show the feasibility of our framework and demonstrate the performance of different approaches used in our system},
	address = {New York, NY, USA},
	author = {Ataei, Parisa and Khan, Fariba and Walkingshaw, Eric},
	booktitle = {Proceedings of the 20th ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences},
	date-modified = {2024-06-06 13:24:43 -0500},
	doi = {10.1145/3486609.3487197},
	isbn = {9781450391122},
	keywords = {choice calculus, variational data, software product lines, relational databases, type systems, variation},
	location = {Chicago, IL, USA},
	numpages = {14},
	pages = {29-42},
	publisher = {Association for Computing Machinery},
	series = {GPCE 2021},
	title = {A Variational Database Management System},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1145/3486609.3487197}}

@inproceedings{Walkingshaw2014,
	abstract = {Variation is everywhere, and in the construction and analysis of customizable software it is paramount. In this context, there arises a need for variational data structures for efficiently representing and computing with related variants of an underlying data type. So far, variational data structures have been explored and developed ad hoc. This paper is a first attempt and a call to action for systematic and foundational research in this area. Research on variational data structures will benefit not only customizable software, but many other application domains that must cope with variability. In this paper, we show how support for variation can be understood as a general and orthogonal property of data types, data structures, and algorithms. We begin a systematic exploration of basic variational data structures, exploring the tradeoffs among different implementations. Finally, we retrospectively analyze the design decisions in our own previous work where we have independently encountered problems requiring variational data structures.},
	address = {New York, NY, USA},
	author = {Walkingshaw, Eric and K\"{a}stner, Christian and Erwig, Martin and Apel, Sven and Bodden, Eric},
	booktitle = {Proceedings of the 2014 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming \& Software},
	date-modified = {2024-06-06 13:23:10 -0500},
	doi = {10.1145/2661136.2661143},
	isbn = {9781450332101},
	keywords = {data structures, software product lines, variation, configurable software, variability-aware analyses},
	location = {Portland, Oregon, USA},
	numpages = {14},
	pages = {213-226},
	publisher = {Association for Computing Machinery},
	series = {Onward! 2014},
	title = {Variational Data Structures: Exploring Tradeoffs in Computing with Variability},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2661136.2661143}}

@inproceedings{Zielinski2013,
	abstract = {Allegories are categories modeled upon the category of sets and binary relations (where sets are objects and binary relations are morphisms composed using joins). In this paper we present a new conceptual data modeling formalism based on the language of allegories. We show that allegories provide more convenient framework for modeling data than more traditional categorical approaches in which arrows are interpreted as functional dependencies and in which many to many or partial relationships have to be represented as spans. Finally, we demonstrate that by using allegories different than the allegory of sets and binary relations, for example the allegory of sets and lattice valued relations, one can model replicated data or data stored in a valid time temporal database.},
	address = {Berlin, Heidelberg},
	author = {Zieli{\'{n}}ski, Bartosz and Ma{\'{s}}lanka, Pawe{\l} and Sobieski, {\'{S}}cibor},
	booktitle = {Model and Data Engineering},
	editor = {Cuzzocrea, Alfredo and Maabout, Sofian},
	isbn = {978-3-642-41366-7},
	pages = {278--289},
	publisher = {Springer Berlin Heidelberg},
	title = {Allegories for Database Modeling},
	year = {2013}}

@inbook{Kleuker2005,
	abstract = {Provably correct software can only be achieved by basing the development process on formal methods. For most industrial applications such a development never terminates because requirements change and new functionality has to be added to the system. Therefore a formal method that supports an incremental development of complex systems is required. The project CoCoN (Provably Correct Communication Networks) that is carried out jointly between Philips Research Laboratories Aachen and the University of Oldenburg takes results from the ESPRIT Basic Research Action ProCoS to show the applicability of a more formal approach to the development of correct telecommunications software. These ProCoS-methods have been adapted to support the development of extensible specifications for distributed systems. Throughout this paper our approach is exemplified by a case study how call handling software for telecommunication switching systems should be developed.},
	address = {Berlin, Heidelberg},
	author = {Kleuker,Stephan and Tjabben,Hermann},
	isbn = {0302-9743},
	keywords = {combination of methods; extension of existing formal methods; incremental development},
	language = {English},
	pages = {479-498},
	publisher = {Springer Berlin Heidelberg},
	series = {FME'96: Industrial Benefit and Advances in Formal Methods},
	title = {The incremental development of correct specifications for distributed systems},
	year = {2005}}

@article{ding2022,
	abstract = {Formal methods are crucial in program specification and verification. Instead of building cases to test functionalities, formal methods specify functionalities as properties and mathematically prove them. Nevertheless, the applicability of formal methods is limited in most development processes due to the requirement of mathematical knowledge for developers. To promote the application of formal methods, we formulate formalism-driven development (FDD), which is an iterative and incremental development process that guides developers to adopt proper formal methods throughout the whole development lifespan. In FDD, system graphs, a variant of transition systems optimized for usability, are designed to model system structures and behaviors with representative properties. System graphs are built iteratively and incrementally via refinement. Properties of system graphs are specified in propositional and temporal logics and verified by model-checking techniques with interpretation over transition system. In addition, skeleton programs are generated based on system graphs and expose implementable interfaces for executing external algorithms and emitting observable effects. Furthermore, we present Seniz, a framework that practicalizes and automates FDD. In this paper, we explicate the concepts and taxonomy of FDD and discuss its practice.},
	article-number = {3415},
	author = {Ding, Yepeng and Sato, Hiroyuki},
	doi = {10.3390/app12073415},
	issn = {2076-3417},
	journal = {Applied Sciences},
	number = {7},
	title = {Formalism-Driven Development: Concepts, Taxonomy, and Practice},
	url = {https://www.mdpi.com/2076-3417/12/7/3415},
	volume = {12},
	year = {2022},
	bdsk-url-1 = {https://www.mdpi.com/2076-3417/12/7/3415},
	bdsk-url-2 = {https://doi.org/10.3390/app12073415}}

@misc{Spivak2010,
	author = {Spivak, David I.},
	copyright = {Creative Commons Attribution 3.0 Unported},
	doi = {10.48550/ARXIV.1009.1166},
	keywords = {Databases (cs.DB), Category Theory (math.CT), FOS: Computer and information sciences, FOS: Computer and information sciences, FOS: Mathematics, FOS: Mathematics, H.2.1; H.5.2, 18A99, 94A99, 68P15},
	publisher = {arXiv},
	title = {Functorial Data Migration},
	url = {https://arxiv.org/abs/1009.1166},
	year = {2010},
	bdsk-url-1 = {https://arxiv.org/abs/1009.1166},
	bdsk-url-2 = {https://doi.org/10.48550/ARXIV.1009.1166}}

@article{Spivak2012,
	abstract = {In this paper we present a simple database definition language: that of categories and functors. A database schema is a small category and an instance is a set-valued functor on it. We show that morphisms of schemas induce three "data migration functors", which translate instances from one schema to the other in canonical ways. These functors parameterize projections, unions, and joins over all tables simultaneously and can be used in place of conjunctive and disjunctive, queries. We also show how to connect a database and a functional programming language by introducing a functorial connection between the schema and the category of types for that language. We begin the paper with a multitude of examples to motivate the definitions, and near the end we provide a dictionary whereby one can translate database concepts into category-theoretic concepts and vice versa. (C) 2012 Elsevier Inc. All rights reserved.;Byline: David I. Spivak Keywords: Category theory; Databases; Data migration; Adjoint functors; Queries In this paper we present a simple database definition language: that of categories and functors. A database schema is a small category and an instance is a set-valued functor on it. We show that morphisms of schemas induce three "data migration functors", which translate instances from one schema to the other in canonical ways. These functors parameterize projections, unions, and joins over all tables simultaneously and can be used in place of conjunctive and disjunctive queries. We also show how to connect a database and a functional programming language by introducing a functorial connection between the schema and the category of types for that language. We begin the paper with a multitude of examples to motivate the definitions, and near the end we provide a dictionary whereby one can translate database concepts into category-theoretic concepts and vice versa. Author Affiliation: Department of Mathematics, Massachusetts Institute of Technology, Cambridge, MA 02139, United States Article History: Received 14 January 2011; Revised 21 March 2012 Article Note: (footnote) [star] This project was supported by ONR grant N000141010841.;In this paper we present a simple database definition language: that of categories and functors. A database schema is a small category and an instance is a set-valued functor on it. We show that morphisms of schemas induce three ``data migration functors'', which translate instances from one schema to the other in canonical ways. These functors parameterize projections, unions, and joins over all tables simultaneously and can be used in place of conjunctive and disjunctive queries. We also show how to connect a database and a functional programming language by introducing a functorial connection between the schema and the category of types for that language. We begin the paper with a multitude of examples to motivate the definitions, and near the end we provide a dictionary whereby one can translate database concepts into category-theoretic concepts and vice versa.;},
	author = {Spivak,David I.},
	isbn = {0890-5401},
	journal = {Information and computation},
	keywords = {Adjoint functors; Category theory; Computer Science; Computer Science, Theory \& Methods; Data migration; Mathematics; Mathematics, Applied; Physical Sciences; Queries; Science \& Technology; Technology},
	language = {English},
	pages = {31-51},
	title = {Functorial data migration},
	volume = {217},
	year = {2012}}

@article{Gholami2016,
	abstract = {The relevant approaches for migrating legacy applications to the cloud are surveyed.An extensive analysis of existing approaches on the basis of a set of important criteria/features.Important cloud migration activities, techniques, and concerns that need to be properly addressed in a typical cloud migration process are delineated.Existing open issues and future research opportunities on the cloud migration research area are discussed. Moving mission-oriented enterprise software applications to cloud environments is a crucial IT task and requires a systematic approach. The foci of this paper is to provide a detailed review of extant cloud migration approaches from the perspective of the process model. To this aim, an evaluation framework is proposed and used to appraise and compare existing approaches for highlighting their features, similarities, and key differences. The survey distills the status quo and makes a rich inventory of important activities, recommendations, techniques, and concerns that are common in a typical cloud migration process in one place. This enables both academia and practitioners in the cloud computing community to get an overarching view of the process of the legacy application migration to the cloud. Furthermore, the survey identifies a number challenges that have not been yet addressed by existing approaches, developing opportunities for further research endeavours.},
	address = {USA},
	author = {Gholami, Mahdi Fahmideh and Daneshgar, Farhad and Low, Graham and Beydoun, Ghassan},
	date-modified = {2024-06-06 13:28:17 -0500},
	doi = {10.1016/j.jss.2016.06.068},
	issn = {0164-1212},
	issue_date = {October 2016},
	journal = {J. Syst. Softw.},
	keywords = {Cloud migration, Legacy application, Process model, Cloud computing, Evaluation framework, Migration methodology},
	month = {oct},
	number = {C},
	numpages = {39},
	pages = {31--69},
	publisher = {Elsevier Science Inc.},
	title = {Cloud Migration Process --- A Survey, Evaluation Framework, and Open Challenges},
	volume = {120},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2016.06.068}}

@article{Bisbal1999,
	abstract = {A legacy information system (LIS) represents a massive, long-term business investment. Unfortunately, such systems are often brittle, slow, and nonextensible. Capturing legacy system data in a way that can support organizations into the future is an important but relatively new research area. The authors offer an overview of existing research and present two promising methodologies for LIS migration.},
	address = {Los Alamitos, CA, USA},
	author = {B. Wu and J. Grimson and J. Bisbal and D. Lawless},
	doi = {10.1109/52.795108},
	issn = {1937-4194},
	journal = {IEEE Software},
	month = {sep},
	number = {05},
	pages = {103-111},
	publisher = {IEEE Computer Society},
	title = {Legacy Information Systems: Issues and Directions},
	volume = {16},
	year = {1999},
	bdsk-url-1 = {https://doi.org/10.1109/52.795108}}

@article{Thalheim2013,
	author = {Thalheim, Bernhard and Wang, Qing},
	doi = {10.1016/j.datak.2012.12.003},
	journal = {Data \& Knowledge Engineering},
	month = {09},
	pages = {260--278},
	title = {Data migration: A theoretical perspective},
	volume = {87},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1016/j.datak.2012.12.003}}

@inbook{Aboulsamh2011,
	abstract = {Information systems often hold data of considerable complexity and value. Their continuing development or maintenance will often necessitate the `migration' of this data from one version of the system to the next: a process that may be expensive, time-consuming, and prone to error. The cost, time, and reliability of data migration may be reduced in the context of modern, model-driven systems development: the requirements for data migration may be derived automatically from the list of proposed changes to the system model. This paper shows how this may be achieved through the definition of a `language of changes'. It shows also how a formal semantics for this language allows us to verify that a proposed change is consistent with representational and semantic constraints, in advance of its application.},
	address = {Berlin, Heidelberg},
	author = {Aboulsamh,Mohammed A. and Davies,Jim},
	editor = {Bellatreche,L. and Pinto,FM},
	isbn = {0302-9743},
	keywords = {Computer Science; Computer Science, Theory \& Methods; data migration; Data modeling; information systems evolution; Science \& Technology; Technology; the B method},
	language = {English},
	pages = {214-225},
	publisher = {Springer Berlin Heidelberg},
	series = {MODEL AND DATA ENGINEERING},
	title = {Specification and Verification of Model-Driven Data Migration},
	volume = {6918},
	year = {2011}}

@techreport{DevOps2021,
	author = {Dustin Smith and Daniella Villalba and Michelle Irvine and Dave Stanke and Nathen Harvey},
	institution = {Google},
	note = {First edition},
	title = {{Accelerate State of DevOps 2021}},
	type = {Standard},
	year = 2021}

@inproceedings{Jin2021,
	abstract = {Serverless computing is increasingly seen as a pivot cloud computing paradigm that has great potential to simplify application development while removing the burden of operational tasks from developers. Despite these advantages, the use of serverless computing has been limited to few application scenarios exhibiting stateless and parallel executions. In addition, the significant effort and cost associated with rearchitecting existing codebase limits the range of these applications and hinder efforts to enhance serverless computing platforms to better suit the needs of current applications.In this paper, we report our experience and observations from migrating four complex and stateful microservice applications (involving 8 programming languages, 5 application frameworks, and 40 application logic services) to ApacheOpenWhisk, a widely used serverless computing platform. We highlight a number of patterns and guidelines that facilitate this migration with minimal code changes and practical performance considerations, and imply a path towards further automating this process. We hope our guidelines will help increase the applicability of serverless computing and improve serverless platforms to be more application friendly.},
	address = {New York, NY, USA},
	author = {Jin, Zewen and Zhu, Yiming and Zhu, Jiaan and Yu, Dongbo and Li, Cheng and Chen, Ruichuan and Akkus, Istemi Ekin and Xu, Yinlong},
	booktitle = {Proceedings of the 12th ACM SIGOPS Asia-Pacific Workshop on Systems},
	doi = {10.1145/3476886.3477510},
	isbn = {9781450386982},
	location = {Hong Kong, China},
	numpages = {8},
	pages = {89--96},
	publisher = {Association for Computing Machinery},
	series = {APSys '21},
	title = {Lessons Learned from Migrating Complex Stateful Applications onto Serverless Platforms},
	url = {https://doi.org/10.1145/3476886.3477510},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1145/3476886.3477510}}

@article{DBLP:journals/ipl/FosterCWZ18,
	author = {Simon Foster and Ana Cavalcanti and Jim Woodcock and Frank Zeyda},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/journals/ipl/FosterCWZ18},
	doi = {10.1016/j.ipl.2018.02.017},
	journal = {Inf. Process. Lett.},
	pages = {47--52},
	timestamp = {Wed, 15 Aug 2018 01:00:00 +0200},
	title = {Unifying theories of time with generalised reactive processes},
	url = {https://doi.org/10.1016/j.ipl.2018.02.017},
	volume = {135},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1016/j.ipl.2018.02.017}}

@inproceedings{Foster14,
	author = {Foster, S. and Zeyda, F. and Woodcock, J.},
	booktitle = {UTP},
	pages = {21--41},
	publisher = {Springer},
	series = {LNCS},
	title = {{Isabelle/UTP}: A Mechanised Theory Engineering Framework},
	volume = {8963},
	year = {2014}}

@book{HoareHe98,
	author = {Hoare, C. A. R. and He, J.},
	comment = {NA PGL},
	isbn = {ISBN-10: 0134587618},
	publisher = {Prentice-Hall},
	title = {Unifying {Theories} of {Programming}},
	year = {1998}}

@book{Milner1989,
	author = {Robin Milner},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/books/daglib/0067019},
	isbn = {978-0-13-115007-2},
	publisher = {Prentice Hall},
	series = {{PHI} Series in computer science},
	timestamp = {Wed, 27 Apr 2011 01:00:00 +0200},
	title = {Communication and concurrency},
	year = {1989}}

@article{DBLP:journals/iandc/BergstraK84,
	author = {Jan A. Bergstra and Jan Willem Klop},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/journals/iandc/BergstraK84},
	doi = {10.1016/S0019-9958(84)80025-X},
	journal = {Information and Control},
	number = {1-3},
	pages = {109--137},
	timestamp = {Thu, 18 May 2017 09:54:16 +0200},
	title = {Process Algebra for Synchronous Communication},
	url = {https://doi.org/10.1016/S0019-9958(84)80025-X},
	volume = {60},
	year = {1984},
	bdsk-url-1 = {https://doi.org/10.1016/S0019-9958(84)80025-X}}

@article{axioms3020260,
	abstract = {Allegories are enriched categories generalizing a category of sets and binary relations. In this paper, we extend a new, recently-introduced conceptual data model based on allegories by adding support for modal operators and developing a modal interpretation of the model in any allegory satisfying certain additional (but natural) axioms. The possibility of using different allegories allows us to transparently use alternative logical frameworks, such as fuzzy relations. Mathematically, our work demonstrates how to enrich with modal operators and to give a many world semantics to an abstract algebraic logic framework. We also give some examples of applications of the modal extension.},
	author = {Zieli{\'n}ski, Bartosz and Ma{\'s}lanka, Pawe{\l} and Sobieski, {\'S}cibor},
	doi = {10.3390/axioms3020260},
	issn = {2075-1680},
	journal = {Axioms},
	number = {2},
	pages = {260--279},
	title = {Modalities for an Allegorical Conceptual Data Model},
	url = {http://www.mdpi.com/2075-1680/3/2/260},
	volume = {3},
	year = {2014},
	bdsk-url-1 = {http://www.mdpi.com/2075-1680/3/2/260},
	bdsk-url-2 = {https://doi.org/10.3390/axioms3020260}}

@article{Frederiks1997,
	abstract = {For successful information systems development, conceptual data modelling is essential. Nowadays many techniques for conceptual data modelling exist: examples are NIAM, FORM, PSM, many (E)ER variants, IFO, and FDM. In-depth comparisons of concepts of these techniques are very difficult as the mathematical formalizations of these techniques, if existing at all, are very different. As such there is a need for a unifying formal framework providing a sufficiently high level of abstraction. In this paper the use of category theory for this purpose is addressed. Well-known conceptual data modelling concepts are discussed from a category theoretic point of view. Advantages and disadvantages of the approach chosen will be outlined.},
	author = {P.J.M. Frederiks and A.H.M. ter Hofstede and E. Lippe},
	doi = {https://doi.org/10.1016/0950-5849(96)01112-3},
	issn = {0950-5849},
	journal = {Information and Software Technology},
	keywords = {Conceptual data modelling, Category theory, Meta modelling},
	number = {1},
	pages = {15 - 25},
	title = {A unifying framework for conceptual data modelling concepts},
	url = {http://www.sciencedirect.com/science/article/pii/0950584996011123},
	volume = {39},
	year = {1997},
	bdsk-url-1 = {http://www.sciencedirect.com/science/article/pii/0950584996011123},
	bdsk-url-2 = {https://doi.org/10.1016/0950-5849(96)01112-3}}

@inproceedings{Johnson2001,
	acmid = {505175},
	address = {New York, NY, USA},
	author = {Johnson, Michael and Dampney, C. N. G.},
	booktitle = {Proceedings of the International Conference on Formal Ontology in Information Systems - Volume 2001},
	doi = {10.1145/505168.505175},
	isbn = {1-58113-377-4},
	keywords = {category theory, data modeling, information systems, interoperating systems, ontology, view update},
	location = {Ogunquit, Maine, USA},
	numpages = {11},
	pages = {59--69},
	publisher = {ACM},
	series = {FOIS '01},
	title = {On Category Theory As a (Meta) Ontology for Information Systems Research},
	url = {http://doi.acm.org/10.1145/505168.505175},
	year = {2001},
	bdsk-url-1 = {http://doi.acm.org/10.1145/505168.505175},
	bdsk-url-2 = {https://doi.org/10.1145/505168.505175}}

@article{JONES2007109,
	abstract = {The aim of this paper is to make a contribution to (compositional) development methods for concurrent programs. In particular, it takes a fresh look at a number of familiar ideas including the problem of interference. Some subtle issues of observability--including granularity--are explored. Based on these points, the paper sets out some requirements for an approach to developing systems by ``splitting atoms safely''.},
	author = {C.B. Jones},
	doi = {https://doi.org/10.1016/j.tcs.2006.12.029},
	issn = {0304-3975},
	journal = {Theoretical Computer Science},
	keywords = {Formal methods, Concurrency, Atomicity, Granularity, Rely/guarantee conditions, Refining atomicity},
	note = {Festschrift for John C. Reynolds's 70th birthday},
	number = {1},
	pages = {109 - 119},
	title = {Splitting atoms safely},
	url = {http://www.sciencedirect.com/science/article/pii/S0304397506009182},
	volume = {375},
	year = {2007},
	bdsk-url-1 = {http://www.sciencedirect.com/science/article/pii/S0304397506009182},
	bdsk-url-2 = {https://doi.org/10.1016/j.tcs.2006.12.029}}

@article{Foster17b,
	author = {Foster, S. and Cavalcanti, A. and Woodcock, J. and Zeyda, F.},
	journal = {Information Processing Letters},
	month = {July},
	note = {Preprint: \url{https://arxiv.org/abs/1712.10213}},
	pages = {47--52},
	title = {Unifying theories of time with generalised reactive processes},
	volume = {135},
	year = 2018}

@article{Foster17c,
	author = {Foster, S. and Cavalcanti, A. and Canham, S. and Woodcock, J. and Zeyda, F.},
	journal = {Submitted to Theoretical Computer Science},
	month = {Dec},
	note = {Preprint: \url{https://arxiv.org/abs/1712.10233}},
	title = {Unifying Theories of Reactive Design Contracts},
	year = 2017}

@article{Joosten-JLAMP2018,
	abstract = {Relation Algebra can be used as a programming language for building information systems. This paper demonstrates the principle by presenting a case study together with the theory behind programming in Relation Algebra. As a case study, we have developed a database application for legal reasoning. We discuss a small part of it to illustrate the mechanisms of programming in Relation Algebra. Beside being declarative, relation algebra comes with attractive prospects for developing software. The compiler that was used for this case study, Ampersand, is the result of an open source project. Ampersand has been tried and tested in practice and is available as free open source software.1},
	author = {Stef Joosten},
	date-modified = {2024-06-06 13:28:53 -0500},
	doi = {10.1016/j.jlamp.2018.04.002},
	issn = {2352-2208},
	journal = {Journal of Logical and Algebraic Methods in Programming},
	keywords = {Relation Algebra, Software development, Legal reasoning, Information systems design, Ampersand, Reactive programming},
	pages = {113-129},
	title = {Relation Algebra as programming language using the {Ampersand} compiler},
	volume = {100},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1016/j.jlamp.2018.04.002}}

@inproceedings{JoostenRAMiCS2017,
	address = {Cham},
	author = {Joosten, Stef},
	booktitle = {Relational and Algebraic Methods in Computer Science: 16th International Conference, RAMiCS 2017, Lyon, France, May 15-18, 2017, Proceedings},
	date-modified = {2024-06-06 13:29:06 -0500},
	editor = {H{\"o}fner, Peter and Pous, Damien and Struth, Georg},
	isbn = {978-3-319-57418-9},
	pages = {177--192},
	publisher = {Springer International Publishing},
	title = {Software Development in Relation Algebra with {Ampersand}},
	year = {2017}}

@article{Bainomugisha2013,
	acmid = {2501666},
	address = {New York, NY, USA},
	articleno = {52},
	author = {Bainomugisha, Engineer and Carreton, Andoni Lombide and Cutsem, Tom van and Mostinckx, Stijn and Meuter, Wolfgang de},
	doi = {10.1145/2501654.2501666},
	issn = {0360-0300},
	issue_date = {August 2013},
	journal = {ACM Comput. Surv.},
	keywords = {Reactive programming, dataflow programming, event-driven applications, functional reactive programming, interactive applications, reactive systems},
	month = aug,
	number = {4},
	numpages = {34},
	pages = {52:1--52:34},
	publisher = {ACM},
	title = {{A Survey on Reactive Programming}},
	url = {http://doi.acm.org/10.1145/2501654.2501666},
	volume = {45},
	year = {2013},
	bdsk-url-1 = {http://doi.acm.org/10.1145/2501654.2501666},
	bdsk-url-2 = {https://doi.org/10.1145/2501654.2501666}}

@inproceedings{Dijkstra2016,
	author = {Dijkstra, Marloes and Joosten, Stef and Stamhuis, Evert and Visser, Mark},
	month = {6},
	note = {Kamerstukken II 2017/06, 29 279, nr. 388},
	publisher = {Open Universiteit},
	subtitle = {Rapport van een verkennend onderzoek in opdracht van het WODC},
	title = {{Beginselen Digitaal: Digitalisering en de Beginselen van de Strafrechtspleging}},
	year = {2016}}

@phdthesis{Michels2015,
	author = {Gerard Michels},
	month = {June},
	school = {Open University of the Netherlands},
	title = {{Development Environment for Rule-based Prototyping}},
	year = {2015}}

@book{davey1990,
	address = {Cambridge},
	author = {Davey, Brian A. and Priestley, Hilary A.},
	isbn = {0521365848 9780521365840 0521367662 9780521367660},
	publisher = {Cambridge University Press},
	title = {{Introduction to Lattices and Order}},
	year = 1990}

@book{Dahl93,
	address = {New York},
	author = {Dahl, Ole-Johan},
	isbn = {0-13-951062-1},
	publisher = {Prentice Hall},
	title = {{Verifiable Programming}},
	year = 1993}

@article{Floyd1967,
	added-at = {2009-01-27T21:07:57.000+0100},
	author = {Floyd, Robert W.},
	biburl = {https://www.bibsonomy.org/bibtex/22fa3c50b3386ec2f640eb8bfaedaa7db/tmcphillips},
	description = {{A Formal Grammar for Flowcharts}},
	interhash = {bd9dee412b9a403b9fa1f1b2f0032f36},
	intrahash = {2fa3c50b3386ec2f640eb8bfaedaa7db},
	journal = {Proceedings of Symposium on Applied Mathematics},
	keywords = {FormalLanguages},
	pages = {19-32},
	timestamp = {2009-01-27T22:39:35.000+0100},
	title = {{Assigning Meanings to Programs}},
	url = {\small http://laser.cs.umass.edu/courses/cs521-621.Spr06/papers/Floyd.pdf},
	volume = 19,
	year = 1967,
	bdsk-url-1 = {%5Csmall%20http://laser.cs.umass.edu/courses/cs521-621.Spr06/papers/Floyd.pdf}}

@article{Hoare1969,
	acmid = {363259},
	address = {New York, NY, USA},
	author = {Hoare, C. A. R.},
	doi = {10.1145/363235.363259},
	issn = {0001-0782},
	issue_date = {Oct. 1969},
	journal = {Commun. ACM},
	keywords = {axiomatic method, formal language definition, machine-independent programming, program documentation, programming language design, theory of programming' proofs of programs},
	month = oct,
	number = {10},
	numpages = {5},
	pages = {576--580},
	publisher = {ACM},
	title = {{An Axiomatic Basis for Computer Programming}},
	volume = {12},
	year = {1969},
	bdsk-url-1 = {https://doi.org/10.1145/363235.363259}}

@inbook{Hordijk2010,
	abstract = {Duplication of data across systems in an organization is a problem because it wastes effort and leads to inconsistencies. Researchers have proposed several technical solutions but duplication still occurs in practice. In this paper we report on a case study of how and why duplication occurs in a large organization, and discuss generalizable lessons learned from this. Our case study research questions are why data gets duplicated, what the size of the negative effects of duplication is, and why existing solutions are not used. We frame our findings in terms of design rationale and explain them by providing a causal model. Our findings suggest that next to technological factors, organizational and project factors have a large effect on duplication. We discuss the implications of our findings for technical solutions in general.},
	address = {Berlin, Heidelberg},
	author = {Hordijk,Wiebe and Wieringa,Roel},
	isbn = {9783642130939;3642130933;},
	keywords = {Computer Communication Networks; Computer Science; Artificial Intelligence (incl. Robotics); Software Engineering; Information Storage and Retrieval; Database Management; Information Systems Applications (incl.Internet)},
	language = {English},
	pages = {68-82},
	publisher = {Springer},
	title = {{Rationality of Cross-System Data Duplication: A Case Study}},
	volume = {6051},
	year = {2010}}

@article{Glass96,
	author = {Robert L. Glass},
	bibsource = {DBLP, http://dblp.uni-trier.de},
	doi = {10.1016/0164-1212(95)00116-6},
	journal = {Journal of Systems and Software},
	number = {3},
	pages = {183-184},
	title = {{Study Supports Existence of Software Crisis; Management Issues Appear to be Prime Cause}},
	volume = {32},
	year = {1996},
	bdsk-url-1 = {https://doi.org/10.1016/0164-1212(95)00116-6}}

@inproceedings{Berghammer2005,
	address = {Berlin, Heidelberg},
	author = {Berghammer, Rudolf and Neumann, Frank},
	booktitle = {Computer Algebra in Scientific Computing: 8th International Workshop, CASC 2005, Kalamata, Greece, September 12-16, 2005. Proceedings},
	doi = {10.1007/11555964-4},
	editor = {Ganzha, Victor G. and Mayr, Ernst W. and Vorozhtsov, Evgenii V.},
	isbn = {978-3-540-32070-8},
	pages = {40--51},
	publisher = {Springer Berlin Heidelberg},
	title = {{RelView -- An {OBDD}-Based Computer Algebra System for Relations}},
	year = {2005},
	bdsk-url-1 = {https://doi.org/10.1007/11555964-4}}

@article{Berghammer1988,
	acmid = {56085},
	address = {Amsterdam, The Netherlands, The Netherlands},
	author = {Berghammer, Rudolf and Ehler, Herbert and Zierer, Hans},
	doi = {10.1016/0167-6423(88)90064-0},
	issn = {0167-6423},
	issue_date = {Oct. 1988},
	journal = {Sci. Comput. Program.},
	month = oct,
	number = {1},
	numpages = {19},
	pages = {45--63},
	publisher = {Elsevier North-Holland, Inc.},
	title = {{Towards an Algebraic Specification of Code Generation}},
	volume = {11},
	year = {1988},
	bdsk-url-1 = {https://doi.org/10.1016/0167-6423(88)90064-0}}

@inproceedings{Vicknair2010,
	acmid = {1900067},
	address = {New York, NY, USA},
	articleno = {42},
	author = {Vicknair, Chad and Macias, Michael and Zhao, Zhendong and Nan, Xiaofei and Chen, Yixin and Wilkins, Dawn},
	booktitle = {Proceedings of the 48th Annual Southeast Regional Conference},
	doi = {10.1145/1900008.1900067},
	isbn = {978-1-4503-0064-3},
	location = {Oxford, Mississippi},
	numpages = {6},
	pages = {42:1--42:6},
	publisher = {ACM},
	series = {ACM SE '10},
	title = {{A Comparison of a Graph Database and a Relational Database: A Data Provenance Perspective}},
	year = {2010},
	bdsk-url-1 = {https://doi.org/10.1145/1900008.1900067}}

@book{VDM,
	address = {Hertfordshire, UK, UK},
	author = {Cliff B. Jones},
	isbn = {0-13-880725-6},
	publisher = {Prentice Hall International (UK) Ltd.},
	title = {{Systematic Software Development using VDM}},
	year = {1986}}

@article{HanenbergKRTS14,
	author = {Stefan Hanenberg and Sebastian Kleinschmager and Romain Robbes and {\'{E}}ric Tanter and Andreas Stefik},
	bibsource = {dblp computer science bibliography, http://dblp.org},
	biburl = {http://dblp.uni-trier.de/rec/bib/journals/ese/HanenbergKRTS14},
	doi = {10.1007/s10664-013-9289-1},
	journal = {Empirical Software Engineering},
	number = {5},
	pages = {1335--1382},
	timestamp = {Sat, 27 Sep 2014 19:03:01 +0200},
	title = {{An Empirical Study on the Impact of Static Typing on Software Maintainability}},
	volume = {19},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-013-9289-1}}

@inproceedings{Petersen2014,
	acmid = {2597152},
	address = {New York, NY, USA},
	author = {Petersen, Pujan and Hanenberg, Stefan and Robbes, Romain},
	booktitle = {Proceedings of the 22Nd International Conference on Program Comprehension},
	doi = {10.1145/2597008.2597152},
	isbn = {978-1-4503-2879-1},
	keywords = {empirical research, programming languages, type systems},
	location = {Hyderabad, India},
	numpages = {11},
	pages = {212--222},
	publisher = {ACM},
	series = {ICPC 2014},
	title = {{An Empirical Comparison of Static and Dynamic Type Systems on API Usage in the Presence of an IDE: Java vs. Groovy with Eclipse}},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2597008.2597152}}

@book{Boehm1981,
	address = {Upper Saddle River, NJ, USA},
	author = {Barry W. Boehm},
	isbn = {0138221227},
	publisher = {Prentice Hall PTR},
	series = {Advances in Computing Science and Technology},
	title = {{Software Engineering Economics}},
	year = {1981}}

@book{Larch,
	address = {New York, NY, USA},
	author = {John V. Guttag and James J. Horning},
	isbn = {0-387-94006-5},
	publisher = {Springer-Verlag New York, Inc.},
	title = {{Larch: Languages and Tools for Formal Specification}},
	year = {1993}}

@book{CSP,
	address = {Upper Saddle River, NJ, USA},
	author = {A. W. Roscoe and C. A. R. Hoare and Richard Bird},
	isbn = {0136744095},
	publisher = {Prentice Hall PTR},
	title = {{The Theory and Practice of Concurrency}},
	year = {1997}}

@book{RBAC,
	author = {{ANSI/INCITS 359: Information Technology}},
	month = feb,
	publisher = {International Committee for Information Technology Standards (formerly NCITS)},
	title = {{Role Based Access Control Document Number: ANSI/INCITS 359-2004}},
	year = {2004}}

@book{IEEE1471,
	author = {{IEEE: Architecture Working Group of the Software Engineering Committee}},
	isbn = {0738125180},
	publisher = {IEEE Standards Department},
	title = {{Standard 1471-2000: Recommended Practice for Architectural Description of Software Intensive Systems}},
	year = {2000}}

@article{MooresLaw,
	acmid = {254618},
	address = {Piscataway, NJ, USA},
	author = {Schaller, Robert R.},
	doi = {10.1109/6.591665},
	issn = {0018-9235},
	issue_date = {June 1997},
	journal = {IEEE Spectr.},
	month = jun,
	number = {6},
	numpages = {8},
	pages = {52--59},
	publisher = {IEEE Press},
	title = {{Moore's Law: Past, Present, and Future}},
	volume = {34},
	year = {1997},
	bdsk-url-1 = {https://doi.org/10.1109/6.591665}}

@book{Brooks1975,
	author = {Brooks, Frederick P. Frederick Phillips},
	isbn = {0-201-00650-2},
	publisher = {Reading, Mass. Addison-Wesley Pub. Co.},
	title = {{The mythical man-month : essays on software development}},
	url = {http://opac.inria.fr/record=b1083694},
	year = 1975,
	bdsk-url-1 = {http://opac.inria.fr/record=b1083694}}

@article{Prakken2005,
	abstract = {This paper reviews the history of {AI} {\&} Law research from the perspective of argument schemes. It starts with the observation that logic, although very well applicable to legal reasoning when there is uncertainty, vagueness and disagreement, is too abstract to give a fully satisfactory classification of legal argument types. It therefore needs to be supplemented with an argument-scheme approach, which classifies arguments not according to their logical form but according to their content, in particular, according to the roles that the various elements of an argument can play. This approach is then applied to legal reasoning, to identify some of the main legal argument schemes. It is also argued that much {AI} {\&} Law research in fact employs the argument-scheme approach, although it usually is not presented as such. Finally, it is argued that the argument-scheme approach and the way it has been employed in {AI} {\&} Law respects some of the main lessons to be learnt from Toulmin's The Uses of Argument.},
	author = {Prakken, Henry},
	doi = {10.1007/s10503-005-4418-7},
	issn = {1572-8374},
	journal = {Argumentation},
	number = {3},
	pages = {303--320},
	title = {{AI {\&} Law, Logic and Argument Schemes}},
	volume = {19},
	year = {2005},
	bdsk-url-1 = {https://doi.org/10.1007/s10503-005-4418-7}}

@misc{beck2001agile,
	author = {Beck, Kent and Beedle, Mike and van Bennekum, Arie and Cockburn, Alistair and Cunningham, Ward and Fowler, Martin and Grenning, James and Highsmith, Jim and Hunt, Andrew and Jeffries, Ron and Kern, Jon and Marick, Brian and Martin, Robert C. and Mellor, Steve and Schwaber, Ken and Sutherland, Jeff and Thomas, Dave},
	booktitle = {{Manifesto for Agile Software Development}},
	interhash = {098cc7e185f10c3da390459a01e0d535},
	intrahash = {8954248a545d88dd2c0e688d1c7e2f9d},
	title = {Manifesto for Agile Software Development},
	url = {http://www.agilemanifesto.org/},
	year = 2001,
	bdsk-url-1 = {http://www.agilemanifesto.org/}}

@article{RCB98,
	author = {Backhouse, R.C.},
	journal = {Information Processing Letters},
	number = 4,
	pages = {169--176},
	title = {{Pair Algebras and Galois Connections}},
	volume = 67,
	year = 1978}

@book{FS90,
	author = {Freyd, P.J. and A. Scedrov},
	publisher = {North-Holland Publishing Co.},
	title = {{Categories, Allegories}},
	year = 1990}

@article{TAR41,
	author = {A. Tarski},
	journal = {Journal of Symbolic Logic},
	number = 3,
	pages = {73--89},
	title = {{On the Calculus of Relations}},
	volume = 6,
	year = 1941}

@book{SCH88a,
	author = {G. Schmidt and T. Str{\"o}hlein},
	publisher = {Springer-Verlag},
	title = {{Relationen und {G}rafen}},
	year = 1988}

@phdthesis{EV99,
	author = {Voermans, E.},
	note = {Ph.D. thesis},
	school = {Eindhoven University of Technology},
	title = {{Inductive Datatypes with Laws and Subtyping, a Relational Model}},
	year = {1999}}

@unpublished{Redbook,
	author = {Aarts, C. and Backhouse, R.C. and Hoogendijk, P. and Voermans, T.S. and Woude, J. van der},
	note = {{S}TOP summer school notes, \verb!http://www.cs.nott.ac.uk/~rcb/papers/abstract.html#book!},
	title = {{A Relational Theory of Datatypes}},
	year = {1992}}

@proceedings{BKS97,
	editor = {Brink, C. and Kahl, W. and Schmidt, G.},
	publisher = {Springer},
	series = {Advances in computing},
	title = {{Relational methods in computer science}},
	year = 1997}

@techreport{LOTOS,
	address = {Geneva, Switzerland},
	author = {ISO},
	institution = {International Standards Organization},
	month = {15 February},
	note = {First edition},
	title = {{ISO 8807: Information Processing Systems -- Open Systems Interconnection -- {LOTOS} -- A Formal Description Technique Based on the Temporal Ordering of Observational Behaviour}},
	type = {Standard},
	year = 1987}

@book{Z,
	address = {New York},
	author = {J.M.\ Spivey},
	edition = {2nd},
	isbn = {0-13-978529-9},
	publisher = {Prentice Hall},
	series = {International Series in Computer Science},
	title = {{The Z Notation: A Reference Manual}},
	year = {1992}}

@book{WOO96,
	address = {London},
	author = {J. Woodcock and J. Davies},
	publisher = {Prentice Hall},
	title = {{Using {Z} - Specification, Refinement, and Proof}},
	year = {1996}}

@book{Haskell98Book,
	address = {Cambridge, England},
	editor = {Simon {Peyton Jones}},
	publisher = {Cambridge University Press},
	title = {{Haskell 98 Language and Libraries -- The Revised Report}},
	year = 2003}

@inproceedings{Dijkstra04,
	address = {Berlin},
	author = {Atze Dijkstra and S. Doaitse Swierstra},
	booktitle = {Advanced Functional Programming, 5th International School, AFP 2004, Tartu, Estonia, August 14-21, 2004, Revised Lectures},
	editor = {Varmo Vene and Tarmo Uustalu},
	isbn = {3-540-28540-7},
	pages = {1-72},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	title = {{Typing Haskell with an Attribute Grammar}},
	volume = {3622},
	year = {2005}}

@book{Ross03,
	address = {Reading, Massachussetts},
	author = {Ronald G. Ross},
	edition = {1},
	isbn = {0201788934},
	month = feb,
	publisher = {Addison-Wesley},
	title = {{Principles of the Business Rules Approach}},
	year = 2003}

@book{Freyd,
	address = {Amsterdam, NL},
	author = {P.J. Freyd and A. Scedrov},
	isbn = {0-444-70368-3},
	publisher = {North-Holland},
	title = {{Categories, Allegories}},
	year = 1991}

@book{Pierce,
	address = {Cambridge, MA, USA},
	author = {Pierce, Benjamin C.},
	isbn = {0-262-16209-1},
	publisher = {MIT Press},
	title = {{Types and Programming Languages}},
	year = {2002}}

@book{Tarski,
	address = {Providence, Rhode Island},
	author = {Tarski, Alfred and Givant, Steven},
	publisher = {American Mathematical Society},
	series = {Colloquium Publications},
	title = {{A Formalization of Set Theory without Variables}},
	volume = {41},
	year = {1987}}

@book{Maddux06,
	author = {Maddux, R.D.},
	isbn = {0-444-52013-9},
	publisher = {Elsevier Science},
	series = {Studies in Logic and the Foundations of Mathematics},
	title = {{Relation Algebras}},
	volume = {150},
	year = 2006}

@book{BrinkKahlSchmidt1997,
	address = {Wien, New York},
	editor = {Chris Brink and Wolfram Kahl and Gunther Schmidt},
	note = {ISBN 3-211-82971-7},
	publisher = {Springer-Verlag},
	series = {Advances in Computing},
	title = {{Relational Methods in Computer Science}},
	year = 1997}

@incollection{Jipsen1997,
	address = {Wien, New York},
	author = {Jipsen, Peter and Brink, Chris and Schmidt, Gunther},
	booktitle = {Relational Methods in Computer Science},
	editor = {Chris Brink and Wolfram Kahl and Gunther Schmidt},
	note = {ISBN 3-211-82971-7},
	pages = {1--21},
	publisher = {Springer-Verlag},
	series = {Advances in Computing},
	title = {{Background material}},
	year = 1997}

@incollection{Schmidt1997,
	address = {Wien, New York},
	author = {Schmidt, Gunther and Hattensperger, Claudia and Winter, Michael},
	booktitle = {Relational Methods in Computer Science},
	editor = {Chris Brink and Wolfram Kahl and Gunther Schmidt},
	note = {ISBN 3-211-82971-7},
	pages = {39--53},
	publisher = {Springer-Verlag},
	series = {Advances in Computing},
	title = {{Heterogeneous Relation Algebra}},
	year = 1997}

@unpublished{Desharnais2009,
	author = {Desharnais, Jules},
	note = {http://www2.ift.ulaval.ca/~Desharnais/Recherche/Tutoriels/TutorielRelMiCS10.pdf},
	title = {{Basics of Relation Algebra}},
	url = {http://www2.ift.ulaval.ca/~Desharnais/Recherche/Tutoriels/TutorielRelMiCS10.pdf},
	bdsk-url-1 = {http://www2.ift.ulaval.ca/~Desharnais/Recherche/Tutoriels/TutorielRelMiCS10.pdf}}

@unpublished{BRM,
	author = {{The Business Rules Group}},
	month = jan,
	note = {available from http://www.BusinessRulesGroup.org},
	title = {{Business Rules Manifesto -- The Principles of Rule Independence}},
	version = {1.2},
	year = 2003}

@proceedings{DBLP:conf/RelMiCS/2009,
	bibsource = {DBLP, http://dblp.uni-trier.de},
	booktitle = {RelMiCS},
	doi = {10.1007/978-3-642-04639-1},
	editor = {Rudolf Berghammer and Ali Jaoua and Bernhard M{\"o}ller},
	isbn = {978-3-642-04638-4},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	title = {{Relations and Kleene Algebra in Computer Science, 11th International Conference on Relational Methods in Computer Science, RelMiCS 2009, and 6th International Conference on Applications of Kleene Algebra, AKA 2009, Doha, Qatar, November 1-5, 2009. Proceedings}},
	volume = {5827},
	year = {2009},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-642-04639-1}}

@inproceedings{Kahl,
	author = {Wolfram Kahl},
	bibsource = {DBLP, http://dblp.uni-trier.de},
	booktitle = {RelMiCS},
	crossref = {DBLP:conf/RelMiCS/2006},
	doi = {10.1007/1182856316},
	pages = {235-250},
	title = {{Semigroupoid Interfaces for Relation-Algebraic Programming in Haskell}},
	year = {2006},
	bdsk-url-1 = {https://doi.org/10.1007/1182856316}}

@article{Craig,
	author = {Scotty D. Craig and Arthur C. Graesser and Jeremiah Sullins and Barry Gholson},
	journal = {Journal of Educational Media},
	pages = {241--250},
	title = {{Affect and Learning: an Exploratory Look into the Role of Affect in Learning with AutoTutor}},
	volume = {29},
	year = {2004}}

@book{Csikszentmihalyi,
	abstract = {{You have heard about how a musician loses herself in her music, how a painter becomes one with the process of painting. In work, sport, conversation or hobby, you have experienced, yourself, the suspension of time, the freedom of complete absorption in activity. This is "flow," an experience that is at once demanding and rewarding--an experience that Mihaly Csikszentmihalyi demonstrates is one of the most enjoyable and valuable experiences a person can have. The exhaustive case studies, controlled experiments and innumerable references to historical figures, philosophers and scientists through the ages prove Csikszentmihalyi's point that flow is a singularly productive and desirable state. But the implications for its application to society are what make the book revolutionary.} {The bestselling introduction to "flow"--a groundbreaking psychological theory that shows readers how to improve the quality of life. "The way to happiness lies not in mindless hedonism, but in mindful change<I>."--New York Times Book Review</I>}},
	author = {Csikszentmihalyi, Mihaly},
	howpublished = {Paperback},
	isbn = {0060920432},
	month = {March},
	publisher = {Harper Perennial},
	title = {Flow: The Psychology of Optimal Experience},
	year = {1991}}

@article{Hattensperger1999,
	acmid = {335519},
	address = {New York, NY, USA},
	author = {Hattensperger, Claudia and Kempf, Peter},
	doi = {10.1016/S0020-0255(99)00014-6},
	issn = {0020-0255},
	issue = {3-4},
	journal = {Information Sciences: an International Journal},
	keywords = {heterogeneous relation algebra, type inference system, typing discipline},
	month = {October},
	numpages = {11},
	pages = {193--203},
	publisher = {Elsevier Science Inc.},
	title = {{Towards a Formal Framework for Heterogeneous Relation Algebra}},
	volume = {119},
	year = {1999},
	bdsk-url-1 = {https://doi.org/10.1016/S0020-0255(99)00014-6}}

@inproceedings{Michels2011,
	address = {Berlin},
	author = {Gerard Michels and Sebastiaan Joosten and Jaap van der Woude and Stef Joosten},
	booktitle = {Proceedings of the 12th conference on Relational and Algebraic Methods in Computer Science RAMICS'11},
	isbn = {978-3-642-21070-9},
	pages = {280-293},
	publisher = {Springer-Verlag},
	series = {Lecture Notes in Computer Science},
	title = {{Ampersand: Applying Relation Algebra in Practice}},
	volume = {6663},
	year = {2011}}

@inproceedings{Joosten2015,
	address = {Berlin},
	author = {Joosten, Stef M. M. and Joosten, Sebastiaan J. C.},
	booktitle = {Relational and Algebraic Methods in Computer Science: 15th International Conference, RAMiCS 2015, Braga, Portugal, September 28 - October 1, 2015, Proceedings},
	date-modified = {2024-06-06 13:28:42 -0500},
	doi = {10.1007/978-3-319-24704-5-14},
	editor = {Kahl, Wolfram and Winter, Michael and Oliveira, Jos{\'e}},
	isbn = {978-3-319-24704-5},
	pages = {225--240},
	publisher = {Springer International Publishing},
	series = {LNCS},
	title = {Type Checking by Domain Analysis in {Ampersand}},
	volume = {10226},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-319-24704-5-14}}

@inproceedings{Amperspiegel,
	address = {Berlin},
	author = {Joosten, Sebastiaan J. C.},
	booktitle = {Relational and Algebraic Methods in Computer Science: 16th International Conference, RAMiCS 2017, Lyon, France, May 15-19, 2017, Proceedings},
	editor = {Pous, Damien and Struth, Georg and H{\"o}fner, Peter},
	isbn = {978-3-319-24704-5},
	pages = {159-176},
	publisher = {Springer International Publishing},
	series = {LNCS},
	title = {{Parsing and Printing of And with Triples}},
	volume = {10226},
	year = {2017}}

@book{Nipkow2002,
	address = {Berlin, Heidelberg},
	author = {Nipkow, Tobias and Wenzel, Markus and Paulson, Lawrence C.},
	isbn = {3-540-43376-7},
	publisher = {Springer-Verlag},
	title = {{Isabelle/HOL: A Proof Assistant for Higher-order Logic}},
	year = {2002}}

@inproceedings{vdWoude2011,
	address = {Berlin},
	author = {Woude, Jaap van der and Joosten, Stef},
	booktitle = {Proceedings of the 12th conference on Relational and Algebraic Methods in Computer Science},
	isbn = {978-3-642-21069-3},
	pages = {347-361},
	publisher = {Springer-Verlag},
	series = {Lecture Notes in Computer Science 6663},
	title = {{Relational Heterogeneity Relaxed by Subtyping}},
	year = {2011}}

@book{RBD,
	author = {Joosten, Stef and Wedemeijer, Lex and Michels, Gerard},
	publisher = {Open Universiteit, Heerlen},
	title = {{Rule-Based Design}},
	year = {2013}}

@article{BrinkBritzSchmidt94,
	abstract = {We present a two-sorted algebra, called a {\em Peirce
algebra}, of relations and sets interacting with each other.  In a
Peirce algebra, sets can combine with each other as in a Boolean
algebra, relations can combine with each other as in a relation algebra,
and in addition we have both a set-forming operator on relations (the
Peirce product of Boolean modules) and a relation-forming operator on
sets (a cylindrification operation). Two applications of Peirce algebras
are given. The first points out that Peirce algebras provide a natural
algebraic framework for modelling certain programming constructs. The
second shows that the so-called {\em terminological logics} arising in
knowledge representation have evolved a semantics best described as a
calculus of relations interacting with sets.},
	author = {Brink, C. and Britz, K. and Schmidt, R. A.},
	journal = {Formal Aspects of Computing},
	note = {Also available as Technical Report MPI-I-92-229, Max-Planck-Institut f{\"u}r Informatik, Saarbr{\"u}cken, Germany (July 1992), and as Research Report RR 140, Department of Mathematics, University of Cape Town, Cape Town, South Africa (August 1992). An extended abstract appears in Nivat, M., Rattray, C., Rus, T. and Scollo, G. (eds), {\em Algebraic Methodology and Software Technology (AMAST'93): Proceedings of the Third International Conference on Algebraic Methodology and Software Technology}. {\em Workshops in Computing} Series, Springer, London, 165--168 (1994).},
	number = {3},
	pages = {339--358},
	title = {{Peirce Algebras}},
	url = {http://www.cs.man.ac.uk/~schmidt/publications/BrinkBritzSchmidt94.html},
	volume = {6},
	year = {1994},
	bdsk-url-1 = {http://www.cs.man.ac.uk/~schmidt/publications/BrinkBritzSchmidt94.html}}

@article{Patel-Schneider87,
	author = {Peter F. Patel-Schneider},
	bibsource = {DBLP, http://dblp.uni-trier.de},
	journal = {Computational Intelligence},
	pages = {64-77},
	title = {{A Hybrid, Decidable, Logic-based Knowledge Representation System}},
	volume = {3},
	year = {1987}}

@article{BrinkSchmidt92,
	abstract = {This paper deals with terminological representation
languages for {\sc kl-one}-type knowledge representation systems.  Such
languages are based on the two primitive syntactic types called concepts
and roles, which are usually represented model-theoretically as sets and
binary relations respectively.  Rather than following the
model-theoretic route, we show that the semantics can be naturally
accommodated in the context of an equational algebra of relations
interacting with sets.  Equational logic is then a natural vehicle for
computing subsumptions, both of concepts and of roles.  We thus propose
the {\em algebraic} rather than model-theoretic computation of
subsumption.  },
	author = {Brink, C. and Schmidt, R. A.},
	journal = {Computers and Mathematics with Applications},
	note = {Also in Lehmann, F. (ed.) (1992), {\em Semantic Networks in Artificial Intelligence}, Modern Applied Mathematics and Computer Science Series {\bf 24}, Pergamon Press, Oxford, UK. Also available as Technical Report TR-ARP-3/90, Automated Reasoning Project, Research School of Social Sciences, Australian National University, Canberra, Australia.},
	number = {2--5},
	pages = {329--342},
	title = {{Subsumption Computed Algebraically}},
	volume = {23},
	year = {1992}}

@article{Tarski1941,
	added-at = {2010-08-02T12:27:52.000+0200},
	author = {A. Tarski},
	biburl = {http://www.bibsonomy.org/bibtex/297c01bcfe69d166578f338d39d0d2507/enitsirhc},
	journal = {Journal of Symbolic Logic},
	month = {September},
	number = 3,
	pages = {73--89},
	title = {{On the Calculus of Relations}},
	volume = 6,
	year = 1941}

@book{Alloy2006,
	author = {Jackson, Daniel},
	isbn = {0262101149},
	publisher = {The MIT Press},
	title = {{Software Abstractions: Logic, Language, and Analysis}},
	year = {2006}}

@book{Sanderson80,
	address = {New York},
	author = {John G. Sanderson},
	isbn = {3-540-09987-5},
	publisher = {Springer-Verlag},
	series = {Lecture Notes in Computer Science},
	title = {{A Relational Theory of Computing}},
	volume = {82},
	year = {1980}}

@article{Codd70,
	address = {New York, NY, USA},
	author = {Codd, E. F.},
	doi = {10.1145/362384.362685},
	issn = {0001-0782},
	journal = {Communications of the ACM},
	notes = {Introduces the relational model for databases},
	number = {6},
	pages = {377--387},
	publisher = {ACM},
	title = {{A Relational Model of Data for Large Shared Data Banks}},
	volume = {13},
	year = {1970},
	bdsk-url-1 = {https://doi.org/10.1145/362384.362685}}

@book{Date00,
	address = {Boston, MA, USA},
	author = {Chris J. Date},
	isbn = {0-201-70850-7},
	publisher = {Addison-Wesley Longman Publishing Co., Inc.},
	title = {{What not How: the Business Rules Approach to Application Development}},
	year = {2000}}

@inbook{Schmidt97,
	author = {Gunther Schmidt and Claudia Hattensperger and Michael Winter},
	booktitle = {{Relational Methods in Computer Science}},
	chapter = 3,
	pages = {39-53},
	publisher = {Springer-Verlag},
	series = {Advances in Computing Science},
	title = {Heterogeneous Relation Algebra},
	year = {1997}}

@article{Russell1905,
	author = {Bertrand Russell},
	journal = {Mind},
	number = {56},
	pages = {479-493},
	title = {{On Denoting}},
	volume = {14},
	year = {1905}}

@article{Selic06,
	address = {Riverton, NJ, USA},
	author = {B. Selic},
	issn = {0018-8670},
	journal = {IBM Systems Journal},
	number = {3},
	pages = {607--620},
	publisher = {IBM Corp.},
	title = {{UML 2: a Model-Driven Development Tool}},
	volume = {45},
	year = {2006}}

@book{UMLuserman,
	address = {Reading, Mass.},
	author = {Grady Booch and James Rumbaugh and Ivar Jakobson},
	publisher = {Addison-Wesley Longman},
	title = {{The Unified Modeling Language User Guide}},
	year = {1999}}

@book{UML,
	address = {Reading, Mass.},
	author = {James Rumbaugh and Ivar Jakobson and Grady Booch},
	isbn = {0-201-30998-X},
	publisher = {Addison-Wesley},
	title = {{The Unified Modeling Language Reference Manual}},
	year = {1999}}

@book{Lloyd1984,
	address = {New York, NY, USA},
	author = {Lloyd, J. W.},
	isbn = {0-387-13299-6},
	publisher = {Springer-Verlag New York, Inc.},
	title = {{Foundations of Logic Programming}},
	year = {1984}}

@book{Lloyd1993,
	address = {Secaucus, NJ, USA},
	author = {Lloyd, John Wylie},
	edition = {2nd},
	isbn = {0387181997},
	publisher = {Springer-Verlag New York, Inc.},
	title = {{Foundations of Logic Programming}},
	year = {1993}}

@book{Toulmin1958,
	abstract = {This reissue of the modern classic on the study of argumentation features
	a new Introduction by the author. A central theme throughout the
	impressive series of philosophical books and articles Stephen Toulmin
	has published since 1948 is the way in which assertions and opinions
	concerning all sorts of topics, brought up in everyday life or in
	academic research, can be rationally justified. Is there one universal
	system of norms, by which all sorts of arguments in all sorts of
	fields must be judged, or must each sort of argument be judged according
	to its own norms? In The Uses of Argument (1958) Toulmin sets out
	his views on these questions for the first time. In spite of initial
	criticisms from logicians and fellow philosophers, The Uses of Argument
	has been an enduring source of inspiration and discussion to students
	of argumentation from all kinds of disciplinary background for more
	than forty years.},
	added-at = {2006-09-18T06:26:07.000+0200},
	author = {Toulmin, Stephen E.},
	biburl = {http://www.bibsonomy.org/bibtex/2f2ad1e971691d5b9c285c1e8c9136f05/neilernst},
	citeulike-article-id = {235638},
	description = {Not previously uploaded},
	howpublished = {Paperback},
	interhash = {fe78dc78431e030fd6390ebef7ebe4fe},
	intrahash = {f2ad1e971691d5b9c285c1e8c9136f05},
	isbn = {0521534836},
	keywords = {philosophy rationale},
	month = {July},
	priority = {3},
	publisher = {Cambridge University Press},
	timestamp = {2006-09-18T06:26:07.000+0200},
	title = {{The Uses of Argument}},
	year = 1958}

@inproceedings{Verheij1999,
	acmid = {323714},
	address = {New York, NY, USA},
	author = {Verheij, Bart},
	booktitle = {Proceedings of the 7th International Conference on Artificial Intelligence and Law},
	doi = {10.1145/323706.323714},
	isbn = {1-58113-165-8},
	location = {Oslo, Norway},
	numpages = {10},
	pages = {43--52},
	publisher = {ACM},
	series = {ICAIL '99},
	title = {{Automated Argument Assistance for Lawyers}},
	year = {1999},
	bdsk-url-1 = {https://doi.org/10.1145/323706.323714}}

@article{Verheij2003,
	author = {Bart Verheij},
	doi = {10.1016/S0004-3702(03)00107-3},
	issn = {0004-3702},
	journal = {Artificial Intelligence},
	keywords = {Argumentation software},
	number = {1},
	pages = {291 - 324},
	title = {{Artificial Argument Assistants for Defeasible Argumentation}},
	volume = {150},
	year = {2003},
	bdsk-url-1 = {https://doi.org/10.1016/S0004-3702(03)00107-3}}

@article{Backus1978,
	acmid = {359579},
	address = {New York, NY, USA},
	author = {Backus, John},
	doi = {10.1145/359576.359579},
	issn = {0001-0782},
	issue_date = {Aug. 1978},
	journal = {Commun. ACM},
	keywords = {algebra of programs, applicative computing systems, applicative state transition systems, combining forms, functional forms, functional programming, metacomposition, models of computing systems, program correctness, program termination, program transformation, programming languages, {von Neumann} computers, {von Neumann} languages},
	month = aug,
	number = {8},
	numpages = {29},
	pages = {613--641},
	publisher = {ACM},
	title = {{Can Programming Be Liberated from the {von Neumann} Style?: A Functional Style and Its Algebra of Programs}},
	volume = {21},
	year = {1978},
	bdsk-url-1 = {https://doi.org/10.1145/359576.359579}}

@book{Java,
	acknowledgement = ack-nhfb,
	author = {David Harms and Barton C. Fiske and Jeffrey C. Rice},
	bibdate = {Wed Jun 17 22:05:06 MDT 1998},
	bibsource = {http://www.amazon.com/exec/obidos/ISBN=0079129862/wholesaleproductA/; http://www.javaworld.com/javaworld/books/jw-books-alphabytitle.html; http://www.math.utah.edu/pub/tex/bib/java.bib; http://www.mcgraw-hill.com/},
	dimensions = {9.22in x 7.47in x 1.26in},
	isbn = {0-07-912986-2},
	isbn-13 = {978-0-07-912986-4},
	keywords = {Internet (Computer network); internet (computer network); Java (computer; Java (Computer program language); program language); technology -- data processing; World Wide Web (Information retrieval system); World Wide Web (information retrieval system)},
	lccn = {TK5105.888 .H37 1996},
	pages = {xxix + 578},
	publisher = {McGraw-Hill},
	title = {{Web Site Programming With Java}},
	url = {http://www.incunabula.com/websitejava/index.html},
	year = {1996},
	bdsk-url-1 = {http://www.incunabula.com/websitejava/index.html}}

@book{Lind2007,
	author = {Douglas Lind},
	publisher = {The National Judicial College Press},
	title = {{Logic and Legal Reasoning}},
	year = {2007}}

@book{Verheij2005,
	address = {The Hague, The Netherlands},
	author = {Bart Verheij},
	keywords = {FUNDAMENTALS computer science},
	publisher = {T.M.C. Asser Press},
	title = {{Virtual Arguments. On the Design of Argument Assistants for Lawyers and Other Arguers}},
	year = {2005}}

@book{Stroustrup97a,
	annote = {SIGNATUR = 798.942},
	author = {Bjarne Stroustrup},
	edition = {Third Edition},
	keywords = {FUNDAMENTALS computer science},
	place = {Favoritenstrasse 9/4th Floor/1863},
	publisher = {Addison-Wesley Professional},
	title = {{The C++ Programming Language}},
	year = {1997}}

@inproceedings{Giorgidze2011,
	abstract = {In this paper we present the first investigation into the implementation of a Functional Hybrid Modelling language for non-causal modelling and simulation of physical systems. In particular, we present a simple way to handle connect constructs: a facility for composing model fragments present in some form in most non-causal modelling languages. Our implementation is realised as a domain-specific language embedded in Haskell. The method of embedding employs quasiquoting, thus demonstrating the effectiveness of this approach for languages that are not suitable for embedding in more traditional ways. Our implementation is available on-line, and thus the first publicly available prototype implementation of a Functional Hybrid Modelling language.},
	address = {Berlin, Heidelberg},
	author = {Giorgidze, George and Nilsson, Henrik},
	booktitle = {Implementation and Application of Functional Languages},
	editor = {Scholz, Sven-Bodo and Chitil, Olaf},
	isbn = {978-3-642-24452-0},
	pages = {138--155},
	publisher = {Springer Berlin Heidelberg},
	title = {{Embedding a Functional Hybrid Modelling Language in Haskell}},
	year = {2011}}

@inproceedings{Elliott94,
	author = {Conal Elliott and Greg Schechter and Ricky Yeung and Salim S. Abi{-}Ezzi},
	bibsource = {dblp computer science bibliography, http://dblp.org},
	biburl = {http://dblp.org/rec/bib/conf/siggraph/ElliottSYA94},
	booktitle = {Proceedings of the 21th Annual Conference on Computer Graphics and Interactive Techniques, {SIGGRAPH} 1994, Orlando, FL, USA, July 24-29, 1994},
	crossref = {DBLP:conf/siggraph/1994},
	doi = {10.1145/192161.192276},
	pages = {421--434},
	timestamp = {Thu, 13 Jul 2017 17:38:16 +0200},
	title = {{TBAG: a High Level Framework for Interactive, Animated 3D Graphics Applications}},
	url = {http://doi.acm.org/10.1145/192161.192276},
	year = {1994},
	bdsk-url-1 = {http://doi.acm.org/10.1145/192161.192276},
	bdsk-url-2 = {https://doi.org/10.1145/192161.192276}}

@proceedings{DBLP:conf/siggraph/1994,
	bibsource = {dblp computer science bibliography, http://dblp.org},
	biburl = {http://dblp.org/rec/bib/conf/siggraph/1994},
	doi = {10.1145/192161},
	editor = {Dino Schweitzer and Andrew S. Glassner and Mike Keeler},
	isbn = {0-89791-667-0},
	publisher = {{ACM}},
	timestamp = {Thu, 13 Jul 2017 17:38:16 +0200},
	title = {{Proceedings of the 21th Annual Conference on Computer Graphics and Interactive Techniques, {SIGGRAPH} 1994, Orlando, FL, USA, July 24-29, 1994}},
	url = {http://doi.acm.org/10.1145/192161},
	year = {1994},
	bdsk-url-1 = {http://doi.acm.org/10.1145/192161},
	bdsk-url-2 = {https://doi.org/10.1145/192161}}
