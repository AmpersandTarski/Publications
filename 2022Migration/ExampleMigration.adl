CONTEXT ExampleMigrationScript

-- The generator relabels all declarations from the old-script.
-- It produces thes declarations in the migration script 
RELATION takes_1[Student*Course]
RELATION isPartOf_1[Module*Course] [UNI]
RELATION isEnrolledFor_1 [Student*Module]

-- The existing relations in the old system may have a different population than at the beginning.
-- For the sake of the example, let us assume that this is the population at the moment of transition.
POPULATION takes_1[Student*Course] CONTAINS
   [ ("Albert", "Management")
   ; ("Peter", "Business IT")
   ; ("John", "Business IT")
   ; ("Charles", "Management")
   ]

POPULATION isPartOf_1[Module*Course] CONTAINS
   [ ("Finance", "Management")
   ; ("Business Rules", "Business IT")
   ; ("Business Analytics", "Management")
   ; ("IT-Governance", "Management")
   ]

POPULATION isEnrolledFor_1 [Student*Module] CONTAINS
   [ ("Susan", "Business Analytics")
   ; ("Peter", "IT-Governance")
   ; ("Susan", "Business Rules")
   ]

-- The rules from the old-system are left out from the migration script
-- because these rules are all satisfied on the moment of transition.
-- If they are retained in the new system
-- RULE EnrollRule_1: isEnrolledFor_1 |- takes_1;isPartOf_1~

-- The generator produces the following migration rules, which will copy any new population into the existing ones,
ENFORCE takes := takes_1\/takes
ENFORCE isPartOf := isPartOf_1\/isPartOf
ENFORCE isEnrolledFor := isEnrolledFor_1\/isEnrolledFor

-- The generator copies the new script entirely into the migration script.
RELATION takes[Student*Course] =
   [ ("Susan", "Business IT")
   ; ("Peter", "Management")
   ]
RELATION isPartOf[Module*Course] [UNI] =
   [ ("IT-Governance", "Business IT") ]

RELATION isEnrolledFor [Student*Module] =
   [ ("Susan", "Business Analytics")
   ; ("Susan", "IT-Governance")
   ; ("Susan", "Business Rules")
   ]

RELATION course[ExamReg*Course] [UNI] =
   [ ("ER1", "Management")
   ; ("ER2", "Business IT")
   ; ("ER3", "Business IT")
   ]
RELATION student[ExamReg*Student] [UNI] =
   [ ("ER1", "Peter")
   ; ("ER2", "Susan")
   ]

RULE ExamRule1: student~;course |- takes
RULE ExamRule2: student~;course;isPartOf~ |- isEnrolledFor

ENDCONTEXT